<?php

/**
 * @file
 * Functions to support theming in the drupalcampathens2016 theme.
 */

use Drupal\Core\Template\Attribute;
use Drupal\Core\Url;

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function drupalcampathens2016_preprocess_html(array &$variables) {
  /* Add class to html tag */
  //$variables['html_attributes']->addClass('no-js');

  // Don't display the site name twice on the front page (and potentially others)
  /*if (isset($variables['head_title_array']['title']) && isset($variables['head_title_array']['name']) && ($variables['head_title_array']['title'] == $variables['head_title_array']['name'])) {
    $variables['head_title'] = $variables['head_title_array']['name'];
  }*/
}

/**
 * Implements hook_page_attachments_alter().
 */
function drupalcampathens2016_page_attachments_alter(array &$page) {
  // Tell IE to use latest rendering engine (not to use compatibility mode).
  /*$ie_edge = [
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => [
    'http-equiv' => 'X-UA-Compatible',
    'content' => 'IE=edge',
    ],
  ];
  $page['#attached']['html_head'][] = [$ie_edge, 'ie_edge'];*/
}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function drupalcampathens2016_preprocess_page(array &$variables) {

}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function drupalcampathens2016_theme_suggestions_page_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
function drupalcampathens2016_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  /*$node = $variables['elements']['#node'];

  if ($variables['elements']['#view_mode'] == "full") {

  }*/
}

/**
 * Implements hook_preprocess_HOOK() for block templates.
 */
function drupalcampathens2016_preprocess_block(&$variables) {
  switch ($variables['base_plugin_id']) {
    case 'system_branding_block':
      $variables['site_logo'] = '';
      if ($variables['content']['site_logo']['#access'] && $variables['content']['site_logo']['#uri']) {
        $variables['site_logo'] = str_replace('.svg', '.png', $variables['content']['site_logo']['#uri']);
      }
      break;

  }
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function drupalcampathens2016_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  $suggestions[] = 'field__' . $element['#view_mode'];
  $suggestions[] = 'field__' . $element['#view_mode'] . '__' . $element['#field_name'];*/
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function drupalcampathens2016_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  if (isset($element['#attributes']['class']) && in_array('form-composite', $element['#attributes']['class'])) {
    $suggestions[] = 'fieldset__form_composite';
  }*/
}

/**
 * Implements hook_preprocess_node().
 *
 * For session (proposals) full view:
 * Add field_day's day to variables array.
 * For session (proposals) teaser view:
 * Replace url with the contents of field field_link_to (if set).
 */
function drupalcampathens2016_preprocess_node(array &$variables) {
  if ($variables['node']->bundle() == 'proposals' && $variables['view_mode'] == 'full') {
    $node = $variables['node'];
    $variables['day_name'] = $node->field_day->entity->field_day_name[0]->getValue()['value'];
  }
  elseif ($variables['node']->bundle() == 'proposals' && $variables['view_mode'] == 'teaser') {
    $node = $variables['node'];
    $uri = $node->field_link_to->uri;
    if ($uri) {
      $url = base_path() . Url::fromUri($uri)->getInternalPath();
      $variables['url'] = $url;
    }
  }
}

/**
 * Implements hook_theme_suggestions_views_view_alter().
 */
function drupalcampathens2016_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_form().
 */
function drupalcampathens2016_preprocess_form(array &$variables) {
  //$variables['attributes']['novalidate'] = 'novalidate';
}

/**
 * Implements hook_preprocess_select().
 */
function drupalcampathens2016_preprocess_select(array &$variables) {
  //$variables['attributes']['class'][] = 'select-chosen';
}

/**
 * Implements hook_preprocess_field().
 */
function drupalcampathens2016_preprocess_field(array &$variables, $hook) {
  /*switch ($variables['element']['#field_name']) {
  }*/
}

/**
 * Implements hook_preprocess_details().
 */
function drupalcampathens2016_preprocess_details(array &$variables) {
  /*$variables['attributes']['class'][] = 'details';
  $variables['summary_attributes']['class'] = 'summary';*/
}

/**
 * Implements hook_theme_suggestions_details_alter().
 */
function drupalcampathens2016_theme_suggestions_details_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_menu_local_task().
 */
function drupalcampathens2016_preprocess_menu_local_task(array &$variables) {
  //$variables['element']['#link']['url']->setOption('attributes', ['class'=>'rounded']);
}

/*function drupalcampathens2016_preprocess_block__system_branding_block(&$variables)
{
  $variables['attributes']['class'][] = "header__branding";
}*/

function drupalcampathens2016_preprocess(&$variables, $hook)
{
  $variables['base_path'] = base_path();
}

/**
 ** Use this to theme each form by machine name
 ** like this: form--contact-element-machine-name-of-form.html.twig
 **/
function drupalcampathens2016_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'form__' . $variables['element']['#form_id'];
}

/**
 * Implements template_preprocess_views_view_grouping().
 *
 * For view submitted_proposals:
 * - Add class to schedule day.
 */
function drupalcampathens2016_preprocess_views_view_grouping(&$variables) {
  if ($variables['view']->id() == 'submitted_proposals') {
    // Get session entity.
    if (is_array($variables['rows'])) {
      $first = reset($variables['rows']);
      $rows = $first['rows'];
      $first_row = reset($rows);
      $day = $first_row->node__field_day_field_day_target_id;
    }
    else {
      return;
    }
  }
  else {
    return;
  }
  // Add class based on date.
  if ($day == 1) {
    $class = 'schedule__day--friday';
  }
  elseif ($day == 2) {
    $class = 'schedule__day--saturday';
  }
  elseif ($day == 3) {
    $class = 'schedule__day--sunday';
  }
  $variables['content_attributes'] = new Drupal\Core\Template\Attribute($variables['attributes']);
  $variables['content_attributes']->addClass($class);
}
